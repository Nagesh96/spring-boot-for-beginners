name: Build and Deploy Java Application

on:
 push:
  branches:
   - main

jobs:
 build-deploy:
  name: Build and Deploy Java Application
  runs-on: ubuntu-latest
  steps:
   - name: checkout code
     uses: actions/checkout@v3

   - name: setup JDK 17
     uses: actions/setup-java@v3
     with:
      distribution: 'corretto'
      java-version: 17

   - name: Unit Tests
     run: mvn -B test --file pom.xml

   - name: Build the Application
     run: |
      mvn clean
      mvn -B package --file pom.xml

 sonarqube:
  runs-on: ubuntu-latest
  needs: build-deploy
  steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: setup JDK 17
        uses: actions/setup-java@v3
        with:
         distribution: 'corretto'
         java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

 docker-build:
  runs-on: ubuntu-latest
  needs: build-deploy
  steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-app:1.0.2
